1. Customers Table

import pandas as pd

# Load the Customers dataset
customers_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Cleaned_Customers.csv')

# Generate INSERT statements for Customers table
for index, row in customers_df.iterrows():
    print(f"INSERT INTO Customers (customerkey, gender, name, city, state_code, state, zip_code, country, continent, birthday) "
          f"VALUES ({row['customerkey']}, '{row['gender']}', '{row['name']}', '{row['city']}', '{row['state_code']}', "
          f"'{row['state']}', '{row['zip_code']}', '{row['country']}', '{row['continent']}', '{row['birthday']}');")



2. Exchange Rates Table

# Load the Exchange Rates dataset
exchange_rates_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Cleaned_Exchange_Rates.csv')

# Generate INSERT statements for Exchange Rates table
for index, row in exchange_rates_df.iterrows():
    print(f"INSERT INTO Exchange_Rates (date, currency_code, exchange_rate) "
          f"VALUES ('{row['date']}', '{row['currency_code']}', {row['exchange_rate']});")



3. Products Table

# Load the Products dataset
products_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Cleaned_Products.csv')

# Generate INSERT statements for Products table
for index, row in products_df.iterrows():
    print(f"INSERT INTO Products (ProductKey, ProductName, Brand, Color, UnitCostUSD, UnitPriceUSD, SubcategoryKey, Subcategory, CategoryKey, Category) "
          f"VALUES ({row['ProductKey']}, '{row['Product Name']}', '{row['Brand']}', '{row['Color']}', {row['Unit Cost USD']}, {row['Unit Price USD']}, "
          f"{row['SubcategoryKey']}, '{row['Subcategory']}', {row['CategoryKey']}, '{row['Category']}');")



4. Sales Table

# Load the Sales dataset
sales_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Cleaned_Sales.csv')

# Generate INSERT statements for Sales table
for index, row in sales_df.iterrows():
    print(f"INSERT INTO Sales (order_number, line_item, order_date, delivery_date, customerkey, storekey, productkey, quantity, currency_code) "
          f"VALUES ({row['Order Number']}, {row['Line Item']}, '{row['Order Date']}', '{row['Delivery Date']}', {row['CustomerKey']}, {row['StoreKey']}, "
          f"{row['ProductKey']}, {row['Quantity']}, '{row['Currency Code']}');")



5. Stores Table

# Load the Stores dataset
stores_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Cleaned_Stores.csv')

# Convert 'Open Date' to proper format
stores_df['Open Date'] = pd.to_datetime(stores_df['Open Date'], format='%m/%d/%Y').dt.strftime('%Y-%m-%d')

# Generate INSERT statements for Stores table with corrected date format
for index, row in stores_df.iterrows():
    print(f"INSERT INTO Stores (storekey, country, state, square_meters, open_date) "
          f"VALUES ({row['StoreKey']}, '{row['Country']}', '{row['State']}', {row['Square Meters']}, '{row['Open Date']}');")




6. Merged Table

# Load the Final Merged dataset
merged_df = pd.read_csv('C:/Users/lenovo/OneDrive/Desktop/Data_spark/final/Final_Merged.csv')

# Generate INSERT statements for the Merged table
for index, row in merged_df.iterrows():
    print(f"INSERT INTO Merged (order_number, line_item, order_date, delivery_date, customerkey, storekey, productkey, quantity, currency_code, "
          f"gender, customer_name, city, state_code, state, zip_code, country, continent, birthday, product_name, brand, color, unit_cost_usd, "
          f"unit_price_usd, store_country, store_state, square_meters, open_date, exchange_rate) "
          f"VALUES ({row['order_number']}, {row['line_item']}, '{row['order_date']}', '{row['delivery_date']}', {row['customerkey']}, {row['storekey']}, "
          f"{row['productkey']}, {row['quantity']}, '{row['currency_code']}', '{row['gender']}', '{row['customer_name']}', '{row['city']}', '{row['state_code']}', "
          f"'{row['state']}', '{row['zip_code']}', '{row['country']}', '{row['continent']}', '{row['birthday']}', '{row['product_name']}', '{row['brand']}', "
          f"'{row['color']}', {row['unit_cost_usd']}, {row['unit_price_usd']}, '{row['store_country']}', '{row['store_state']}', {row['square_meters']}, "
          f"'{row['open_date']}', {row['exchange_rate']});")
